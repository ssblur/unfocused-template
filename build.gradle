buildscript {
  ext.kotlin_version = rootProject.kotlin_version
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}
plugins {
  id 'dev.architectury.loom' version '1.10-SNAPSHOT' apply false
  id 'architectury-plugin' version '3.4-SNAPSHOT'
  id 'com.gradleup.shadow' version '8.3.6' apply false
  id "com.palantir.git-version" version "0.15.0"
}
apply plugin: 'kotlin'

architectury {
  minecraft = project.minecraft_version
}

allprojects {
  group = rootProject.maven_group
  try {
    def matcher = gitVersion() =~ /^v(\d+\.\d+\.\d+-?)+.*/
    matcher.find()
    version = matcher.group(1)
    if (version.endsWith("-")) version += "SNAPSHOT"
  } catch(Exception ignored) {
    version = "1"
  }
}

subprojects {
  apply plugin: 'dev.architectury.loom'
  apply plugin: 'architectury-plugin'
  apply plugin: 'maven-publish'

  base {
      // Set up a suffixed format for the mod jar names, e.g. `example-fabric`.
      archivesName = "$rootProject.archives_name-$project.name"
  }

  repositories {
    maven { url "https://mvn.blur.lol/snapshots" }
    maven { url "https://mvn.blur.lol/releases" }
    maven { url 'https://maven.blamejared.com' }
    maven {
      name = "TerraformersMC"
      url = "https://maven.terraformersmc.com/"
    }
  }

  loom {
    silentMojangMappingsLicense()
  }

  dependencies {
    minecraft "net.minecraft:minecraft:$rootProject.minecraft_version"
    mappings loom.officialMojangMappings()
    compileOnly 'com.google.code.findbugs:jsr305:3.0.1'
  }

  java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    withSourcesJar()
  }

  tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release = 21
  }

  // Configure Maven publishing.
  publishing {
    publications {
      mavenJava(MavenPublication) {
        artifactId = base.archivesName.get()
        from components.java
      }
    }

    repositories {
    }
  }

  processResources {
    inputs.property 'version', project.version

    filesMatching(['fabric.mod.json', 'META-INF/neoforge.mods.toml']) {
      expand(
              version: project.version,
              minecraft_version: rootProject.minecraft_version,
              unfocused_version: rootProject.unfocused_version,
              fabric_loader_version: rootProject.fabric_loader_version
      )
    }
  }
}
repositories {
  mavenCentral()
}
dependencies {
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}
kotlin {
  jvmToolchain(8)
}
