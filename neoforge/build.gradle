plugins {
  id 'com.gradleup.shadow'
  id 'org.jetbrains.kotlin.jvm'
}

architectury {
  platformSetupLoomIde()
  neoForge()
}

configurations {
  common {
    canBeResolved = true
    canBeConsumed = false
  }
  compileClasspath.extendsFrom common
  runtimeClasspath.extendsFrom common
  developmentNeoForge.extendsFrom common

  // Files in this configuration will be bundled into your mod using the Shadow plugin.
  // Don't use the `shadow` configuration from the plugin itself as it's meant for excluding files.
  shadowBundle {
    canBeResolved = true
    canBeConsumed = false
  }
}

repositories {
  maven {
    name = 'NeoForged'
    url = 'https://maven.neoforged.net/releases'
  }
  maven {
    name = "Kotlin for Forge"
    setUrl("https://thedarkcolour.github.io/KotlinForForge/")
  }
  mavenCentral()
}

dependencies {
  neoForge "net.neoforged:neoforge:$rootProject.neoforge_version"
  implementation("thedarkcolour:kotlinforforge-neoforge:$rootProject.kff_version") { transitive false }

  modImplementation("com.ssblur.unfocused:unfocused-neoforge:${rootProject.unfocused_version}")

  common(project(path: ':common', configuration: 'namedElements'))
  shadowBundle project(path: ':common', configuration: 'transformProductionNeoForge')
}

shadowJar {
  configurations = [project.configurations.shadowBundle]
  archiveClassifier = 'dev-shadow'
}

remapJar {
  input.set shadowJar.archiveFile
}
kotlin {
  jvmToolchain(rootProject.jvm_version as Integer)
}
